{% extends 'base.html' %}

{% block page_title %}{{ formatted_date }} - Dosing Details{% endblock %}

{% block styles %}
  {{ super() }}
  <link rel="stylesheet" href="{{ url_for('static', filename='css/audit-calendar.css') }}">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/doser-dashboard.css') }}">
  <style>
    .day-view-header {
      background: linear-gradient(135deg, var(--card-bg) 0%, var(--davys-gray) 100%);
      border-radius: 15px;
      padding: 2rem;
      margin-bottom: 2rem;
      text-align: center;
      border: 1px solid var(--border-color);
    }
    
    .day-view-header h1 {
      color: var(--text-color);
      margin-bottom: 0.5rem;
      font-family: var(--font-heading);
    }
    
    .day-view-header .date-subtitle {
      color: var(--text-muted);
      font-size: 1.1rem;
      margin-bottom: 1rem;
    }
    
    .navigation-breadcrumb {
      background: var(--card-bg);
      padding: 1rem 1.5rem;
      border-radius: 10px;
      margin-bottom: 2rem;
      border: 1px solid var(--border-color);
    }
    
    .navigation-breadcrumb a {
      color: var(--powder-blue);
      text-decoration: none;
    }
    
    .navigation-breadcrumb a:hover {
      color: var(--text-color);
    }
    
    .day-summary-cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }
    
    .summary-card {
      background: var(--card-bg);
      border-radius: 15px;
      padding: 1.5rem;
      border: 1px solid var(--border-color);
      text-align: center;
    }
    
    .summary-card h3 {
      color: var(--text-color);
      margin-bottom: 1rem;
      font-size: 1.2rem;
    }
    
    .summary-stat {
      font-size: 2rem;
      font-weight: bold;
      color: var(--alice-blue);
      margin-bottom: 0.5rem;
    }
    
    .summary-label {
      color: var(--text-muted);
      font-size: 0.9rem;
    }
    
    .detailed-timeline {
      background: var(--card-bg);
      border-radius: 15px;
      padding: 2rem;
      border: 1px solid var(--border-color);
      margin-bottom: 2rem;
    }
    
    .timeline-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 2px solid var(--border-color);
    }
    
    .timeline-item {
      display: flex;
      align-items: flex-start;
      padding: 1.5rem 0;
      border-bottom: 1px solid rgba(143, 145, 162, 0.2);
      position: relative;
    }
    
    .timeline-item:last-child {
      border-bottom: none;
    }
    
    .timeline-time {
      min-width: 100px;
      padding-right: 2rem;
      font-family: 'Courier New', monospace;
      font-weight: bold;
      color: var(--powder-blue);
      font-size: 1.1rem;
    }
    
    .timeline-content {
      flex: 1;
    }
    
    .timeline-event-title {
      font-size: 1.2rem;
      font-weight: bold;
      color: var(--text-color);
      margin-bottom: 0.5rem;
    }
    
    .timeline-event-details {
      color: var(--text-muted);
      line-height: 1.6;
    }
    
    .timeline-meta {
      background: rgba(148, 176, 218, 0.1);
      padding: 0.75rem;
      border-radius: 8px;
      margin-top: 1rem;
      border-left: 4px solid var(--powder-blue);
    }
    
    .refill-section {
      background: var(--card-bg);
      border-radius: 15px;
      padding: 2rem;
      border: 1px solid var(--border-color);
      margin-bottom: 2rem;
    }
    
    .refill-header {
      display: flex;
      align-items: center;
      margin-bottom: 1.5rem;
      color: var(--text-color);
    }
    
    .refill-header i {
      margin-right: 0.75rem;
      font-size: 1.3rem;
    }
    
    .refill-item {
      background: rgba(148, 176, 218, 0.1);
      padding: 1rem;
      border-radius: 10px;
      margin-bottom: 1rem;
      border-left: 4px solid #28a745;
    }
    
    .refill-item.estimate {
      border-left-color: #ffc107;
    }
    
    .refill-item.estimate.low {
      border-left-color: #dc3545;
      animation: pulse 2s infinite;
    }
    
    .no-data-message {
      background: var(--card-bg);
      border-radius: 15px;
      padding: 3rem;
      text-align: center;
      border: 1px solid var(--border-color);
      color: var(--text-muted);
    }
    
    .no-data-message i {
      font-size: 3rem;
      margin-bottom: 1rem;
      opacity: 0.5;
    }
    
    .loading-state {
      text-align: center;
      padding: 3rem;
      color: var(--text-muted);
    }
    
    .action-buttons {
      display: flex;
      gap: 1rem;
      margin-bottom: 2rem;
      flex-wrap: wrap;
    }
    
    .action-buttons .btn {
      flex: 1;
      min-width: 150px;
    }
    
    @media (max-width: 768px) {
      .day-summary-cards {
        grid-template-columns: 1fr;
      }
      
      .timeline-item {
        flex-direction: column;
      }
      
      .timeline-time {
        min-width: auto;
        padding-right: 0;
        padding-bottom: 0.5rem;
      }
      
      .action-buttons {
        flex-direction: column;
      }
      
      .action-buttons .btn {
        flex: none;
      }
    }
  </style>
{% endblock %}

{% block content %}
<div class="container-fluid">
  <!-- Navigation Breadcrumb -->
  <div class="navigation-breadcrumb">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item">
          <a href="{{ url_for('doser_main') }}">
            <i class="fas fa-tint"></i> Dosing
          </a>
        </li>
        <li class="breadcrumb-item">
          <a href="{{ url_for('doser_audit_calendar') }}">
            <i class="fas fa-calendar"></i> Calendar
          </a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">
          {{ formatted_date }}
        </li>
      </ol>
    </nav>
  </div>

  <!-- Day View Header -->
  <div class="day-view-header">
    <h1>ðŸ“… Daily Dosing Report</h1>
    <div class="date-subtitle">{{ formatted_date }}</div>
    
    <!-- Action Buttons -->
    <div class="action-buttons">
      <button class="btn btn-outline-primary" onclick="goToPreviousDay()">
        <i class="fas fa-chevron-left"></i> Previous Day
      </button>
      <button class="btn btn-outline-info" onclick="goToCalendar()">
        <i class="fas fa-calendar"></i> Back to Calendar
      </button>
      <button class="btn btn-outline-primary" onclick="goToNextDay()">
        Next Day <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </div>

  <!-- Day Summary Cards -->
  <div class="day-summary-cards" id="summary-cards">
    <div class="summary-card">
      <h3>Total Doses</h3>
      <div class="summary-stat" id="total-doses">-</div>
      <div class="summary-label">Dose Events</div>
    </div>
    
    <div class="summary-card">
      <h3>Total Volume</h3>
      <div class="summary-stat" id="total-volume">-</div>
      <div class="summary-label">Milliliters Dosed</div>
    </div>
    
    <div class="summary-card">
      <h3>Products Dosed</h3>
      <div class="summary-stat" id="products-count">-</div>
      <div class="summary-label">Different Products</div>
    </div>
    
    <div class="summary-card">
      <h3>Schedules Active</h3>
      <div class="summary-stat" id="schedules-count">-</div>
      <div class="summary-label">Active Schedules</div>
    </div>
  </div>

  <!-- Refill Events Section -->
  <div class="refill-section" id="refill-section" style="display: none;">
    <div class="refill-header">
      <i class="fas fa-tint"></i>
      <h3>Refill Events</h3>
    </div>
    <div id="refill-content">
      <!-- Refill events will be populated here -->
    </div>
  </div>

  <!-- Detailed Timeline -->
  <div class="detailed-timeline" id="timeline-section">
    <div class="timeline-header">
      <h3><i class="fas fa-clock"></i> Dosing Timeline</h3>
      <div class="timeline-controls">
        <button class="btn btn-sm btn-outline-secondary" onclick="refreshTimeline()">
          <i class="fas fa-sync-alt"></i> Refresh
        </button>
      </div>
    </div>
    
    <div id="timeline-content">
      <div class="loading-state">
        <div class="spinner-border" role="status">
          <span class="visually-hidden">Loading timeline...</span>
        </div>
        <p>Loading detailed dose timeline...</p>
      </div>
    </div>
  </div>

  <!-- No Data Message (hidden by default) -->
  <div class="no-data-message" id="no-data-message" style="display: none;">
    <i class="fas fa-calendar-times"></i>
    <h3>No Dosing Activity</h3>
    <p>No doses or refill events were recorded for {{ formatted_date }}.</p>
    <div class="mt-3">
      <a href="{{ url_for('doser_audit_calendar') }}" class="btn btn-outline-primary">
        <i class="fas fa-calendar"></i> Return to Calendar
      </a>
    </div>
  </div>
</div>

<script>
  // API configuration
  const apiUrls = {{ api_urls | tojson }};
  const selectedDate = '{{ date_str }}';
  const tankId = {{ tank_id }};
  
  let dayData = null;
  let refillData = null;

  // Initialize page
  document.addEventListener('DOMContentLoaded', function() {
    loadDayDetails();
  });

  function loadDayDetails() {
    const timelineContent = document.getElementById('timeline-content');
    timelineContent.innerHTML = `
      <div class="loading-state">
        <div class="spinner-border" role="status">
          <span class="visually-hidden">Loading timeline...</span>
        </div>
        <p>Loading detailed dose timeline...</p>
      </div>
    `;

    // Load detailed day data
    const url = `${apiUrls.day_details}?date=${selectedDate}`;
    
    fetch(url)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          dayData = data.data;
          populateDayView(data.data);
        } else {
          showError('Failed to load day details: ' + data.error);
        }
      })
      .catch(error => {
        console.error('Error loading day details:', error);
        showError('Network error loading day details');
      });
  }

  function populateDayView(data) {
    // Update summary cards
    updateSummaryCards(data);
    
    // Update refill section
    updateRefillSection(data);
    
    // Update timeline
    updateTimeline(data);
    
    // Show/hide sections based on data availability
    const hasData = data.doses && data.doses.length > 0;
    const hasRefills = data.refill_events && 
      (data.refill_events.refills.length > 0 || data.refill_events.estimates.length > 0);
    
    if (!hasData && !hasRefills) {
      document.getElementById('no-data-message').style.display = 'block';
      document.getElementById('summary-cards').style.display = 'none';
      document.getElementById('timeline-section').style.display = 'none';
    }
  }

  function updateSummaryCards(data) {
    const totalDoses = data.doses ? data.doses.length : 0;
    const totalVolume = data.summary ? data.summary.total_volume : 0;
    const productsCount = data.products_summary ? Object.keys(data.products_summary).length : 0;
    const schedulesCount = data.summary ? data.summary.unique_schedules : 0;

    document.getElementById('total-doses').textContent = totalDoses;
    document.getElementById('total-volume').textContent = totalVolume.toFixed(1) + 'mL';
    document.getElementById('products-count').textContent = productsCount;
    document.getElementById('schedules-count').textContent = schedulesCount;
  }

  function updateRefillSection(data) {
    const refillSection = document.getElementById('refill-section');
    const refillContent = document.getElementById('refill-content');
    
    if (!data.refill_events || 
        (data.refill_events.refills.length === 0 && data.refill_events.estimates.length === 0)) {
      refillSection.style.display = 'none';
      return;
    }
    
    refillSection.style.display = 'block';
    let refillHTML = '';
    
    // Historical refills
    if (data.refill_events.refills.length > 0) {
      data.refill_events.refills.forEach(refill => {
        refillHTML += `
          <div class="refill-item">
            <div class="d-flex justify-content-between align-items-start">
              <div>
                <strong>${refill.product_name}</strong>
                <div class="text-muted mt-1">
                  <i class="fas fa-tint"></i> Product Refilled
                </div>
              </div>
              <div class="text-end">
                <span class="badge bg-success">Completed</span>
              </div>
            </div>
          </div>
        `;
      });
    }
    
    // Refill estimates
    if (data.refill_events.estimates.length > 0) {
      data.refill_events.estimates.forEach(estimate => {
        const isLow = estimate.current_avail <= estimate.low_threshold;
        const estimateClass = isLow ? 'estimate low' : 'estimate';
        const badgeClass = isLow ? 'bg-danger' : 'bg-warning';
        const badgeText = isLow ? 'LOW STOCK' : 'REFILL NEEDED';
        
        refillHTML += `
          <div class="refill-item ${estimateClass}">
            <div class="d-flex justify-content-between align-items-start">
              <div>
                <strong>${estimate.product_name}</strong>
                <div class="text-muted mt-1">
                  <i class="fas fa-clock"></i> Estimated Refill Date
                </div>
                <small class="text-muted">
                  Current: ${estimate.current_avail.toFixed(1)}mL / ${estimate.total_volume.toFixed(1)}mL
                </small>
              </div>
              <div class="text-end">
                <span class="badge ${badgeClass}">${badgeText}</span>
              </div>
            </div>
          </div>
        `;
      });
    }
    
    refillContent.innerHTML = refillHTML;
  }

  function updateTimeline(data) {
    const timelineContent = document.getElementById('timeline-content');
    
    if (!data.doses || data.doses.length === 0) {
      timelineContent.innerHTML = `
        <div class="text-center text-muted py-4">
          <i class="fas fa-clock"></i>
          <p class="mb-0">No dose events recorded for this date</p>
        </div>
      `;
      return;
    }
    
    let timelineHTML = '';
    
    data.doses.forEach(dose => {
      const time = new Date(dose.trigger_time).toLocaleTimeString('en-US', {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hour12: false
      });
      
      // Schedule adherence badge
      const adherenceBadge = getAdherenceBadge(dose.schedule_adherence);
      
      // Build technical details
      let technicalDetails = [];
      if (dose.dose_efficiency_percent) {
        technicalDetails.push(`Efficiency: ${dose.dose_efficiency_percent}%`);
      }
      if (dose.doser_actual_name) {
        technicalDetails.push(`Doser: ${dose.doser_actual_name}`);
      }
      if (dose.doser_type) {
        technicalDetails.push(`Type: ${dose.doser_type}`);
      }
      if (dose.time_since_previous_minutes) {
        technicalDetails.push(`Interval: ${dose.time_since_previous_minutes}min`);
      }
      
      timelineHTML += `
        <div class="timeline-item">
          <div class="timeline-time">${time}</div>
          <div class="timeline-content">
            <div class="timeline-event-title">
              ${dose.product_name} - ${dose.amount}mL
            </div>
            <div class="timeline-event-details">
              <div class="mb-2">
                <strong>Schedule:</strong> ${dose.scheduled_amount}mL every ${formatInterval(dose.trigger_interval)}
              </div>
              ${dose.product_uses ? `<div class="mb-2"><strong>Product Use:</strong> ${dose.product_uses}</div>` : ''}
              ${dose.missed_dose_handling ? `<div class="mb-2"><strong>Missed Dose Policy:</strong> ${dose.missed_dose_handling}</div>` : ''}
            </div>
            ${technicalDetails.length > 0 ? `
              <div class="timeline-meta">
                <strong>Technical Details:</strong> ${technicalDetails.join(' â€¢ ')}
              </div>
            ` : ''}
          </div>
        </div>
      `;
    });
    
    timelineContent.innerHTML = timelineHTML;
  }

  function formatInterval(seconds) {
    if (!seconds) return 'Unknown';
    
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    
    if (hours >= 24) {
      const days = Math.floor(hours / 24);
      return `${days} day${days !== 1 ? 's' : ''}`;
    } else if (hours > 0) {
      return `${hours}h ${minutes}m`;
    } else {
      return `${minutes}m`;
    }
  }

  function showError(message) {
    const timelineContent = document.getElementById('timeline-content');
    timelineContent.innerHTML = `
      <div class="alert alert-danger" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        ${message}
      </div>
    `;
  }

  function refreshTimeline() {
    loadDayDetails();
  }

  function goToPreviousDay() {
    const currentDate = new Date(selectedDate);
    currentDate.setDate(currentDate.getDate() - 1);
    const previousDay = currentDate.toISOString().split('T')[0];
    window.location.href = `/doser/audit/calendar/day/${previousDay}`;
  }

  function goToNextDay() {
    const currentDate = new Date(selectedDate);
    currentDate.setDate(currentDate.getDate() + 1);
    const nextDay = currentDate.toISOString().split('T')[0];
    window.location.href = `/doser/audit/calendar/day/${nextDay}`;
  }

  function goToCalendar() {
    window.location.href = '{{ url_for("doser_audit_calendar") }}';
  }
</script>
{% endblock %}
